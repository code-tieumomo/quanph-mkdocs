{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"Creating your site","text":"<p>After you've installed Material for MkDocs, you can bootstrap your project documentation using the <code>mkdocs</code> executable. Go to the directory where you want your project to be located and enter:</p> <pre><code>mkdocs new .\n</code></pre> <p>Alternatively, if you're running Material for MkDocs from within Docker, use:</p> Unix, PowershellWindows   <pre><code>docker run --rm -it -v ${PWD}:/docs squidfunk/mkdocs-material new .\n</code></pre>   <pre><code>docker run --rm -it -v \"%cd%\":/docs squidfunk/mkdocs-material new .\n</code></pre>    <p>This will create the following structure:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre>"},{"location":"about/#configuration","title":"Configuration","text":""},{"location":"about/#minimal-configuration","title":"Minimal configuration","text":"<p>Simply add the following lines to <code>mkdocs.yml</code> to enable the theme:</p> <pre><code>theme:\n    name: material\n</code></pre>  Recommended: configuration validation and auto-complete <p>In order to minimize friction and maximize productivity, Material for MkDocs provides its own schema.json1 for <code>mkdocs.yml</code>. If your editor supports YAML schema validation, it's definitely recommended to set it up:</p> Visual Studio CodeOther   <ol> <li>Install <code>vscode-yaml</code> for YAML language support.</li> <li> <p>Add the schema under the <code>yaml.schemas</code> key in your user or     workspace <code>settings.json</code>:</p> <pre><code>{\n  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [ // (1)!\n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"tag:yaml.org,2002:python/name:materialx.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:materialx.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\"\n  ]\n}\n</code></pre> <ol> <li>This setting is necessary if you plan to use icons and emojis,     or Visual Studio Code will show errors on certain lines.</li> </ol> </li> </ol>   <ol> <li>Ensure your editor of choice has support for YAML schema validation.</li> <li> <p>Add the following lines at the top of <code>mkdocs.yml</code>:</p> <pre><code># yaml-language-server: $schema=https://squidfunk.github.io/mkdocs-material/schema.json\n</code></pre> </li> </ol>"},{"location":"about/#advanced-configuration","title":"Advanced configuration","text":"<p>Material for MkDocs comes with many configuration options. The setup section explains in great detail how to configure and customize colors, fonts, icons and much more:</p>  <ul> <li>Changing the colors</li> <li>Changing the fonts</li> <li>Changing the language</li> <li>Changing the logo and icons</li> <li>Ensuring data privacy</li> <li>Setting up navigation</li> <li>Setting up site search</li> <li>Setting up site analytics</li> <li>Setting up social cards</li> <li>Setting up a blog</li> <li>Setting up tags</li> <li>Setting up versioning</li> <li>Setting up the header</li> <li>Setting up the footer</li> <li>Adding a git repository</li> <li>Adding a comment system</li> <li>Building for offline usage</li> </ul>  <p>Furthermore, see the list of supported Markdown extensions that are natively integrated with Material for MkDocs, delivering an unprecedented low-effort technical writing experience.</p>"},{"location":"about/#previewing-as-you-write","title":"Previewing as you write","text":"<p>MkDocs includes a live preview server, so you can preview your changes as you write your documentation. The server will automatically rebuild the site upon saving. Start it with:</p> <pre><code>mkdocs serve # (1)!\n</code></pre> <ol> <li> <p>If you have a large documentation project, it might take minutes until     MkDocs has rebuilt all pages for you to preview. If you're only interested     in the current page, the <code>--dirtyreload</code> flag will make     rebuilds much faster:</p> <pre><code>mkdocs serve --dirtyreload\n</code></pre> </li> </ol> <p>If you're running Material for MkDocs from within Docker, use:</p> Unix, PowershellWindows   <pre><code>docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material\n</code></pre>   <pre><code>docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material\n</code></pre>    <p>Point your browser to localhost:8000 and you should see:</p>"},{"location":"about/#building-your-site","title":"Building your site","text":"<p>When you're finished editing, you can build a static site from your Markdown files with:</p> <pre><code>mkdocs build\n</code></pre> <p>If you're running Material for MkDocs from within Docker, use:</p> Unix, PowershellWindows   <pre><code>docker run --rm -it -v ${PWD}:/docs squidfunk/mkdocs-material build\n</code></pre>   <pre><code>docker run --rm -it -v \"%cd%\":/docs squidfunk/mkdocs-material build\n</code></pre>    <p>The contents of this directory make up your project documentation. There's no need for operating a database or server, as it is completely self-contained. The site can be hosted on GitHub Pages, GitLab Pages, a CDN of your choice or your private web space.</p>   <ol> <li> <p>If you're a MkDocs plugin or Markdown extension author and your project works with Material for MkDocs, you're very much invited to contribute a schema for your extension or plugin as part of a pull request on GitHub. If you already have a schema defined, or wish to self-host your schema to reduce duplication, you can add it via $ref.\u00a0\u21a9</p> </li> </ol>"}]}